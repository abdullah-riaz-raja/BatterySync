{"ast":null,"code":"var _jsxFileName = \"/Users/tahahashmat/Desktop/Team Projects/BatterySync/frontEnd/web-client/src/components/Battery/Batteries.js\";\nimport React, { Fragment, useEffect } from 'react'; //import {useBattery} from 'react-use';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport BatteryIcon from './BatteryIcon';\nconst useStyles = makeStyles({\n  root: {\n    height: \"100%\",\n    color: \"white\",\n    backgroundColor: \"#313233\",\n    marginTop: \"50px\",\n    width: \"45%\",\n    marginBottom: 12,\n    fontSize: 14,\n    marginRight: \"5%\"\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  }\n});\n\nconst Batteries = () => {\n  const classes = useStyles();\n  const bull = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bullet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }\n  }, \"\\u2022\");\n  useEffect(() => {\n    fetch('https://us-central1-batterysync-89680.cloudfunctions.net/api/getAllBatteries').then(() => {\n      return console.log(\"dsf\");\n    }).catch(thing => {\n      console.log(thing);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BatteryIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.root,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Device\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Battery Level\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.root,\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Expand\"))), /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.root,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Device\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Battery Level\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.root,\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Expand\"))), /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.root,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Device\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Battery Level\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.root,\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Expand\"))), /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.root,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Device\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Battery Level\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.root,\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Expand\")))));\n};\n\nexport default Batteries; // const batteryState = useBattery();\n// if (!batteryState.isSupported) {\n//     return (\n//       <div>\n//         <strong>Battery sensor</strong>: <span>not supported</span>\n//       </div>\n//     );\n//   }\n//   if (!batteryState.fetched) {\n//     return (\n//       <div>\n//         <strong>Battery sensor</strong>: <span>supported</span> <br />\n//         <strong>Battery state</strong>: <span>fetching</span>\n//       </div>\n//     );\n//   }\n//   return (\n//     <div>\n//       <strong>Battery sensor</strong>:&nbsp;&nbsp; <span>supported</span> <br />\n//       <strong>Battery state</strong>: <span>fetched</span> <br />\n//       <strong>Charge level</strong>:&nbsp;&nbsp; <span>{ (batteryState.level * 100).toFixed(0) }%</span> <br />\n//       <strong>Charging</strong>:&nbsp;&nbsp; <span>{ batteryState.charging ? 'yes' : 'no' }</span> <br />\n//       <strong>Charging time</strong>:&nbsp;&nbsp;\n//       <span>{ batteryState.chargingTime ? batteryState.chargingTime : 'finished' }</span> <br />\n//       <strong>Discharging time</strong>:&nbsp;&nbsp; <span>{ batteryState.dischargingTime }</span>\n//     </div>\n//   )","map":{"version":3,"sources":["/Users/tahahashmat/Desktop/Team Projects/BatterySync/frontEnd/web-client/src/components/Battery/Batteries.js"],"names":["React","Fragment","useEffect","makeStyles","Card","CardActions","CardContent","Button","Typography","Grid","BatteryIcon","useStyles","root","height","color","backgroundColor","marginTop","width","marginBottom","fontSize","marginRight","bullet","display","margin","transform","Batteries","classes","bull","fetch","then","console","log","catch","thing"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react'\n//import {useBattery} from 'react-use';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport BatteryIcon from './BatteryIcon'\n\n\n\n\nconst useStyles = makeStyles({\n\n    root: {\n        height: \"100%\",\n        color: \"white\",\n        backgroundColor: \"#313233\",\n        marginTop: \"50px\",\n        width: \"45%\",\n        marginBottom: 12,\n        fontSize: 14,\n        marginRight: \"5%\",\n\n        \n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n\n  });\n\n\n\nconst Batteries = () => {\n\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n\n        useEffect(() => {\n\n            fetch('https://us-central1-batterysync-89680.cloudfunctions.net/api/getAllBatteries').then(()=> {\n            return console.log(\"dsf\")\n        }).catch((thing)=> {\n            console.log(thing)\n        })\n\n          }, [])\n        \n    \n\n    return (\n        <Fragment> \n        <Grid container spacing = {6} >\n        <Card className={classes.root}>\n        <CardContent>\n          <BatteryIcon/>\n        <Typography className={classes.root} color=\"textSecondary\" gutterBottom>\n          Device\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          Battery Level\n        </Typography>\n        <Typography className={classes.root} color=\"textSecondary\">\n          Expand\n        </Typography>\n        </CardContent>\n        </Card>\n\n\n        <Card className={classes.root}>\n        <CardContent>\n        <Typography className={classes.root} color=\"textSecondary\" gutterBottom>\n          Device\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          Battery Level\n        </Typography>\n        <Typography className={classes.root} color=\"textSecondary\">\n          Expand\n        </Typography>\n        </CardContent>\n        </Card>\n\n            <Card className={classes.root}>\n        <CardContent>\n        <Typography className={classes.root} color=\"textSecondary\" gutterBottom>\n          Device\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          Battery Level\n        </Typography>\n        <Typography className={classes.root} color=\"textSecondary\">\n          Expand\n        </Typography>\n        </CardContent>\n        </Card>\n\n\n        <Card className={classes.root}>\n        <CardContent>\n        <Typography className={classes.root} color=\"textSecondary\" gutterBottom>\n          Device\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          Battery Level\n        </Typography>\n        <Typography className={classes.root} color=\"textSecondary\">\n          Expand\n        </Typography>\n        </CardContent>\n        </Card>\n        </Grid>\n        </Fragment>\n\n\n    )\n}\n    \n       \n\nexport default Batteries\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const batteryState = useBattery();\n\n // if (!batteryState.isSupported) {\n        //     return (\n        //       <div>\n        //         <strong>Battery sensor</strong>: <span>not supported</span>\n        //       </div>\n        //     );\n        //   }\n        \n        //   if (!batteryState.fetched) {\n        //     return (\n        //       <div>\n        //         <strong>Battery sensor</strong>: <span>supported</span> <br />\n        //         <strong>Battery state</strong>: <span>fetching</span>\n        //       </div>\n        //     );\n        //   }\n        \n        //   return (\n        //     <div>\n        //       <strong>Battery sensor</strong>:&nbsp;&nbsp; <span>supported</span> <br />\n        //       <strong>Battery state</strong>: <span>fetched</span> <br />\n        //       <strong>Charge level</strong>:&nbsp;&nbsp; <span>{ (batteryState.level * 100).toFixed(0) }%</span> <br />\n        //       <strong>Charging</strong>:&nbsp;&nbsp; <span>{ batteryState.charging ? 'yes' : 'no' }</span> <br />\n        //       <strong>Charging time</strong>:&nbsp;&nbsp;\n        //       <span>{ batteryState.chargingTime ? batteryState.chargingTime : 'finished' }</span> <br />\n        //       <strong>Discharging time</strong>:&nbsp;&nbsp; <span>{ batteryState.dischargingTime }</span>\n        //     </div>\n        //   )\n    "]},"metadata":{},"sourceType":"module"}