{"ast":null,"code":"var _jsxFileName = \"/Users/tahahashmat/Desktop/Team Projects/BatterySync/frontEnd/web-client/src/components/Batteries.js\";\nimport React, { Fragment, useEffect } from 'react'; //import {useBattery} from 'react-use';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst Batteries = () => {\n  useEffect(() => {\n    fetch('https://us-central1-batterysync-89680.cloudfunctions.net/api/getAllBatteries').then(() => {\n      return console.log(\"dsf\");\n    }).catch(thing => {\n      console.log(thing);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Word of the Day\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"be\", bull, \"nev\", bull, \"o\", bull, \"lent\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.pos,\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"adjective\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"well meaning and kindly.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), '\"a benevolent smile\"')), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Learn More\"))), \");\");\n};\n\nexport default Batteries; // const batteryState = useBattery();\n// if (!batteryState.isSupported) {\n//     return (\n//       <div>\n//         <strong>Battery sensor</strong>: <span>not supported</span>\n//       </div>\n//     );\n//   }\n//   if (!batteryState.fetched) {\n//     return (\n//       <div>\n//         <strong>Battery sensor</strong>: <span>supported</span> <br />\n//         <strong>Battery state</strong>: <span>fetching</span>\n//       </div>\n//     );\n//   }\n//   return (\n//     <div>\n//       <strong>Battery sensor</strong>:&nbsp;&nbsp; <span>supported</span> <br />\n//       <strong>Battery state</strong>: <span>fetched</span> <br />\n//       <strong>Charge level</strong>:&nbsp;&nbsp; <span>{ (batteryState.level * 100).toFixed(0) }%</span> <br />\n//       <strong>Charging</strong>:&nbsp;&nbsp; <span>{ batteryState.charging ? 'yes' : 'no' }</span> <br />\n//       <strong>Charging time</strong>:&nbsp;&nbsp;\n//       <span>{ batteryState.chargingTime ? batteryState.chargingTime : 'finished' }</span> <br />\n//       <strong>Discharging time</strong>:&nbsp;&nbsp; <span>{ batteryState.dischargingTime }</span>\n//     </div>\n//   )","map":{"version":3,"sources":["/Users/tahahashmat/Desktop/Team Projects/BatterySync/frontEnd/web-client/src/components/Batteries.js"],"names":["React","Fragment","useEffect","makeStyles","Card","CardActions","CardContent","Button","Typography","Batteries","fetch","then","console","log","catch","thing","classes","root","title","bull","pos"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAMA,MAAMC,SAAS,GAAG,MAAM;AAIhBP,EAAAA,SAAS,CAAC,MAAM;AAEZQ,IAAAA,KAAK,CAAC,8EAAD,CAAL,CAAsFC,IAAtF,CAA2F,MAAK;AAChG,aAAOC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAP;AACH,KAFG,EAEDC,KAFC,CAEMC,KAAD,IAAU;AACfH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KAJG;AAMD,GARM,EAQJ,EARI,CAAT;AAYJ,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEC,OAAO,CAACC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAED,OAAO,CAACE,KAA/B;AAAsC,IAAA,KAAK,EAAC,eAA5C;AAA4D,IAAA,YAAY,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,eAIA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKC,IADL,SACcA,IADd,OACqBA,IADrB,SAJA,eAOA,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEH,OAAO,CAACI,GAA/B;AAAoC,IAAA,KAAK,EAAC,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPA,eAUA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGG,sBAHH,CAVA,CADI,eAiBJ,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,CAjBI,CADJ,OADJ;AA4BH,CA5CD;;AAgDA,eAAeX,SAAf,C,CAqBA;AAEC;AACO;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Fragment, useEffect } from 'react'\n//import {useBattery} from 'react-use';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n\n\nconst Batteries = () => {\n\n\n\n        useEffect(() => {\n\n            fetch('https://us-central1-batterysync-89680.cloudfunctions.net/api/getAllBatteries').then(()=> {\n            return console.log(\"dsf\")\n        }).catch((thing)=> {\n            console.log(thing)\n        })\n\n          }, [])\n        \n    \n\n    return (\n        <Fragment> \n            <Card className={classes.root}>\n        <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          Word of the Day\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          be{bull}nev{bull}o{bull}lent\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          adjective\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          well meaning and kindly.\n          <br />\n          {'\"a benevolent smile\"'}\n        </Typography>\n        </CardContent>\n        <CardActions>\n        <Button size=\"small\">Learn More</Button>\n        </CardActions>\n        </Card>\n        );\n\n        </Fragment>\n\n    )\n}\n    \n       \n\nexport default Batteries\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const batteryState = useBattery();\n\n // if (!batteryState.isSupported) {\n        //     return (\n        //       <div>\n        //         <strong>Battery sensor</strong>: <span>not supported</span>\n        //       </div>\n        //     );\n        //   }\n        \n        //   if (!batteryState.fetched) {\n        //     return (\n        //       <div>\n        //         <strong>Battery sensor</strong>: <span>supported</span> <br />\n        //         <strong>Battery state</strong>: <span>fetching</span>\n        //       </div>\n        //     );\n        //   }\n        \n        //   return (\n        //     <div>\n        //       <strong>Battery sensor</strong>:&nbsp;&nbsp; <span>supported</span> <br />\n        //       <strong>Battery state</strong>: <span>fetched</span> <br />\n        //       <strong>Charge level</strong>:&nbsp;&nbsp; <span>{ (batteryState.level * 100).toFixed(0) }%</span> <br />\n        //       <strong>Charging</strong>:&nbsp;&nbsp; <span>{ batteryState.charging ? 'yes' : 'no' }</span> <br />\n        //       <strong>Charging time</strong>:&nbsp;&nbsp;\n        //       <span>{ batteryState.chargingTime ? batteryState.chargingTime : 'finished' }</span> <br />\n        //       <strong>Discharging time</strong>:&nbsp;&nbsp; <span>{ batteryState.dischargingTime }</span>\n        //     </div>\n        //   )\n    "]},"metadata":{},"sourceType":"module"}